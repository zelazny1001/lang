public class G711ToPCMConverter {

    private static final int BIAS = 0x84;

    public static float[] muLawToFloat(byte[] muLawData) {
        float[] pcmData = new float[muLawData.length];
        for (int i = 0; i < muLawData.length; i++) {
            pcmData[i] = muLawDecode(muLawData[i]) / 32768.0f;
        }
        return pcmData;
    }

    private static int muLawDecode(byte muLawByte) {
        muLawByte = (byte) ~muLawByte;

        int sign = muLawByte & 0x80;
        int exponent = (muLawByte & 0x70) >> 4;
        int mantissa = muLawByte & 0x0F;
        int sample = ((mantissa << 3) + BIAS) << (exponent + 2);
        if (sign != 0) {
            sample = -sample;
        }

        return sample;
    }

    public static void main(String[] args) {
        byte[] muLawData = { 0x7F, 0x00, 0x55, (byte) 0xAA, (byte) 0x80 };
        float[] pcmData = muLawToFloat(muLawData);

        for (float sample : pcmData) {
            System.out.println(sample);
        }
    }
}

//-----------------------------

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;

import javax.sound.sampled.AudioFileFormat;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.UnsupportedAudioFileException;

public class G711ToWavConverter {

    private static final int BIAS = 0x84;

    public byte[] muLawToPcm(byte[] muLawData) {
        byte[] pcmData = new byte[muLawData.length * 2];
        for (int i = 0; i < muLawData.length; i++) {
            int pcmSample = decodeMuLaw(muLawData[i]);
            pcmData[2 * i] = (byte) (pcmSample & 0xFF);
            pcmData[2 * i + 1] = (byte) ((pcmSample >> 8) & 0xFF);
        }
        return pcmData;
    }

    private int decodeMuLaw(byte muLawByte) {
        muLawByte = (byte) ~muLawByte;
        int sign = muLawByte & 0x80;
        int exponent = (muLawByte & 0x70) >> 4;
        int mantissa = muLawByte & 0x0F;
        int sample = ((mantissa << 3) + BIAS) << (exponent + 2);
        if (sign != 0) {
            sample = -sample;
        }
        return sample;
    }

    public void convertG711ToWav(String g711Filename, String wavFilename, AudioFormat format) {
        try {
            byte[] g711Data = readAllBytes(new FileInputStream(g711Filename));
            byte[] pcmData = muLawToPcm(g711Data);
            try (AudioInputStream audioInputStream = new AudioInputStream(
                    new ByteArrayInputStream(pcmData),
                    format,
                    pcmData.length / format.getFrameSize())) {
                AudioSystem.write(audioInputStream, AudioFileFormat.Type.WAVE, new File(wavFilename));
            }
        } catch (IOException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }

    private byte[] readAllBytes(InputStream inputStream) {
        try {
            byte[] buffer = new byte[8192];
            int bytesRead;
            ByteArrayOutputStream output = new ByteArrayOutputStream();
            while ((bytesRead = inputStream.read(buffer)) != -1) {
                output.write(buffer, 0, bytesRead);
            }
            return output.toByteArray();
        } catch (IOException e) {
            System.out.println("Error: " + e.getMessage());
            return new byte[0];
        }
    }

    public static void main(String[] args) {
        G711ToWavConverter converter = new G711ToWavConverter();
        String g711Filename = "input.g711";
        String wavFilename = "output.wav";
        float sampleRate = 8000.0f;
        int sampleSizeInBits = 16;
        int channels = 1;
        boolean signed = true;
        boolean bigEndian = false;
        AudioFormat format = new AudioFormat(sampleRate, sampleSizeInBits, channels, signed, bigEndian);

        converter.convertG711ToWav(g711Filename, wavFilename, format);
        System.out.println("Conversion completed successfully.");
    }
}