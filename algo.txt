package analyzer;

public class CosineSimilarityProcessor {
    private final String id1;
    private final String id2;
    private final double cosineSimilarity;

    public CosineSimilarityProcessor(String id1, String id2, double cosineSimilarity) {
        this.id1 = id1;
        this.id2 = id2;
        this.cosineSimilarity = cosineSimilarity;
    }

    public static CosineSimilarityProcessor fromFFT(String id1, float[] fft1, String id2, float[] fft2) {
        double cosineDistance = calculateCosineDistance(fft1, fft2);
        return new CosineSimilarityProcessor(id1, id2, cosineDistance);
    }

    private static double calculateCosineDistance(float[] fft1, float[] fft2) {
        double dotProduct = 0.0;
        double magnitude1 = 0.0;
        double magnitude2 = 0.0;
        int length = Math.min(fft1.length, fft2.length);
        for (int i = 0; i < length; i++) {
            dotProduct += fft1[i] * fft2[i];
            magnitude1 += fft1[i] * fft1[i];
            magnitude2 += fft2[i] * fft2[i];
        }
        magnitude1 = Math.sqrt(magnitude1);
        magnitude2 = Math.sqrt(magnitude2);
        if (magnitude1 == 0 || magnitude2 == 0) {
            return 0;
        }
        return dotProduct / (magnitude1 * magnitude2);
    }

    public String getId1() {
        return id1;
    }

    public String getId2() {
        return id2;
    }

    public double getCosineSimilarity() {
        return cosineSimilarity;
    }

    @Override
    public String toString() {
        return String.format("id1: %s, id2: %s, similarity: %.3f", id1, id2, cosineSimilarity);
    }
}