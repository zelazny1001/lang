import requests
import json
import urllib3

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

URL = "http://localhost:9000/rest/utility?utterance="
UTTERANCE = "test utterance here"

response = requests.get(f"{URL}{UTTERANCE}", verify=False)
response.raise_for_status()
data = response.json()

print("\nFull JSON Response:\n", json.dumps(data, indent=2))

cortex_response = data.get("cortexResponseHeader")
if cortex_response:
    print("\nFound cortexResponseHeader:\n", json.dumps(cortex_response, indent=2))
else:
    print("cortexResponseHeader not found in response.")

activity_log = data.get("activityLog")
if activity_log:
    print("\nFound activityLog:\n", json.dumps(activity_log, indent=2))
    for entry in activity_log:
        output_data = entry.get("output", {})
        intent_info = output_data.get("IntentInfo", [])
        if intent_info:
            print("\nFound IntentInfo:\n", json.dumps(intent_info, indent=2))
            first_intent = intent_info[0]
            intent = first_intent.get("intent")
            score = first_intent.get("score")
            features = first_intent.get("features", [])
            formatted_features = [f"{feature.get('name', 'unknown')}={feature.get('value', 'unknown')}" for feature in features if isinstance(feature, dict)]
            features_str = "[" + ", ".join(f"'{f}'" for f in formatted_features) + "]"
            print(f"Extracted intent: {intent}, score: {score}, features: {features_str}")
        else:
            print("No IntentInfo found in this entry.")
else:
    print("activityLog not found in response.")