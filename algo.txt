package state;

import org.springframework.stereotype.Service;
import java.util.concurrent.ConcurrentHashMap;

@Service
public class AcceptRejectStateManager {

    private ConcurrentHashMap<Integer, AcceptRejectData> dataMap = new ConcurrentHashMap<>();

    public AcceptRejectData getAcceptRejectData(int port) {
        return dataMap.get(port);
    }

    public boolean addAccepted(int port, byte[] acceptedItem) {
        AcceptRejectData acceptRejectData = dataMap.computeIfAbsent(port, k -> new AcceptRejectData());
        return acceptRejectData.addAccepted(acceptedItem);
    }

    public boolean addRejected(int port, byte[] rejectedItem) {
        AcceptRejectData acceptRejectData = dataMap.computeIfAbsent(port, k -> new AcceptRejectData());
        return acceptRejectData.addRejected(rejectedItem);
    }

    public boolean delete(int port) {
        if (dataMap.containsKey(port)) {
            dataMap.remove(port);
            return true;
        } else {
            throw new IllegalArgumentException("No element found for port: " + port);
        }
    }
}