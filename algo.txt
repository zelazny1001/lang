transcript_line	test_complaint_type	test_complaint_summary
trx chunk A 01	noComplaint	none
trx chunk A 02	noComplaint	summary A 02
trx chunk A 03	CT1	summary A 03
trx chunk A 04	noComplaint	summary A 04
trx chunk A 05	CT4	summary A 05
trx chunk A 06	noComplaint	none
trx chunk A 07	noComplaint	none
trx chunk A 08	noComplaint	none
trx chunk A 09	noComplaint	none
trx chunk A 10	CT8	summary A 10
trx chunk A 11	noComplaint	none
trx chunk A 12	noComplaint	none
trx chunk B 01	CT5	summary B 01
trx chunk B 02	CT5	summary B 02
trx chunk B 03	CT6	summary B 03
trx chunk B 04	noComplaint	none
trx chunk B 05	CT6	summary B 05
trx chunk B 06	noComplaint	none
trx chunk B 07	noComplaint	none
trx chunk B 08	CT3	summary B 08
trx chunk B 09	noComplaint	none
trx chunk B 10	noComplaint	none
trx chunk B 11	noComplaint	none
trx chunk B 12	noComplaint	none
trx chunk B 13	CT9	summary B 13
trx chunk C 01	noComplaint	none
trx chunk C 02	CT2	summary C 02
trx chunk C 03	noComplaint	none
trx chunk C 04	noComplaint	none
trx chunk C 05	noComplaint	none
trx chunk C 06	CT6	summary C 06
trx chunk C 07	noComplaint	none
trx chunk C 08	noComplaint	none
trx chunk C 09	noComplaint	none

================================

import requests
import pandas as pd

conversationComplaintDetails = {}
is_testing = False

def get_complaint_type(currentTranscript, row_data):
    if is_testing and row_data:
        print(f'is_testing: {is_testing}')
        return row_data.get("test_complaint_type", "noComplaint")
    response = requests.post(
        "http://localhost:9500/complaintType",
        json={"transcript": currentTranscript}
    )
    response.raise_for_status()
    return response.json().get("complaintType", "noComplaint")

def get_complaint_summary(currentTranscript, complaint_type, row_data):
    if complaint_type == "noComplaint":
        return "none"
    if is_testing and row_data:
        return row_data.get("test_complaint_type", "noComplaint")
    response = requests.post(
        "http://localhost:9501/complaintSummary",
        json={"transcript": currentTranscript}
    )
    response.raise_for_status()
    return response.json().get("summary", "")

def orchestrateConversation(conversationID, currentTranscript, row_data=None):
    if conversationID not in conversationComplaintDetails:
        conversationComplaintDetails[conversationID] = []

    conversation_data = conversationComplaintDetails[conversationID]
    complaint_type = get_complaint_type(currentTranscript, row_data)
    complaint_summary = get_complaint_summary(currentTranscript, complaint_type, row_data)

    if conversation_data and conversation_data[-1]["complaintType"] == complaint_type:
        conversation_data[-1]["transcription"].append(currentTranscript)
    else:
        conversation_data.append({
            "complaintType": complaint_type,
            "transcription": [currentTranscript],
            "complaintSummary": complaint_summary
        })

def read_spreadsheet(spreadsheet_path: str, sheet_name=0):
    df = pd.read_excel(spreadsheet_path, sheet_name=sheet_name, engine="openpyxl")
    return df.to_dict(orient="records")

def run_with_spreadsheet(spreadsheet_path: str):
    spreadsheet_rows = read_spreadsheet(spreadsheet_path)
    for row in spreadsheet_rows:
        conversation_id = str(row["conversation_id"])
        transcript_line = str(row["transcript_line"])
        orchestrateConversation(conversation_id, transcript_line, row_data=row)
    return conversationComplaintDetails

def show_complaint_details(conversation_complaint_details):
    print("\nconversation complaint details:")
    for conversation_id, complaint_blocks in conversation_complaint_details.items():
        print(f"\nConversation ID: {conversation_id}")
        for block in complaint_blocks:
            print(f"\nComplaint Type: {block['complaintType']}")
            print(f"Complaint Summary: {block['complaintSummary']}")
            print("Transcriptions:")
            for transcript in block["transcription"]:
                print(f"  - {transcript}")

if __name__ == "__main__":
    test_data_path = "/test-data.xlsx"
    final_data = run_with_spreadsheet(test_data_path)
    show_complaint_details(final_data)
