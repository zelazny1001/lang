import org.springframework.stereotype.Component;

import java.util.ArrayList;
import java.util.List;

@Component
public class SequenceNumberManager {

    private final List<Integer> accepted = new ArrayList<>();
    private final List<Integer> rejected = new ArrayList<>();

    public List<Integer> getAccepted() {
        return accepted;
    }

    public List<Integer> getRejected() {
        return rejected;
    }

    public void addAccepted(int sequenceNumber) {
        accepted.add(sequenceNumber);
    }

    public void addRejected(int sequenceNumber) {
        rejected.add(sequenceNumber);
    }
}

------

import net.sf.fmj.media.rtp.util.RTPPacket;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.integration.core.GenericSelector;
import org.springframework.messaging.Message;
import org.springframework.stereotype.Service;

import java.util.HashSet;
import java.util.Set;

@Service
public class AudioMessageFilter implements GenericSelector<Message<?>> {

    @Autowired
    private SequenceNumberManager sequenceNumberManager;

    @Override
    public boolean accept(Message<?> message) {
        RTPPacket rtpPacket = (RTPPacket) message.getPayload();
        int sequenceNumber = rtpPacket.seqnum;
        byte[] rtpData = rtpPacket.data;

        Set<Byte> dataSet = new HashSet<>();
        for (byte b : rtpData) {
            dataSet.add(b);
        }

        if (dataSet.size() == 2 && dataSet.contains((byte) 126) && dataSet.contains((byte) -1)) {
            sequenceNumberManager.addRejected(sequenceNumber);
            return false;
        } else {
            sequenceNumberManager.addAccepted(sequenceNumber);
            return true;
        }
    }
}