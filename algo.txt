import os
import pandas as pd
from openpyxl import Workbook
from openpyxl.utils.dataframe import dataframe_to_rows
from openpyxl.styles import Font
from openpyxl.worksheet.dimensions import ColumnDimension

def createRMSSummaries(inputdir, outputFilename):
    print(f"Input Dir: {inputdir}")

    if os.path.exists(outputFilename):
        os.remove(outputFilename)
        print(f"Existing file {outputFilename} removed.")

    workbook = Workbook()
    default_sheet = workbook.active
    workbook.remove(default_sheet)

    for root, _, files in os.walk(inputdir):
        print(f"Checking for summary stats in: {root}")
        if "rms_summary_stats.txt" in files:
            filepath = os.path.join(root, "rms_summary_stats.txt")
            dirname = os.path.basename(root)
            print(f"Processing file: {filepath}")

            try:
                df = pd.read_csv(filepath, sep="|", skipinitialspace=True)
                df = df.applymap(lambda x: x.strip() if isinstance(x, str) else x)

                worksheet = workbook.create_sheet(title=dirname)

                for row in dataframe_to_rows(df, index=False, header=True):
                    worksheet.append(row)

                for col in worksheet.iter_cols(min_row=1, max_row=1):
                    for cell in col:
                        cell.font = Font(name="Arial", size=10, bold=True)

                for col in worksheet.iter_cols(min_row=2):
                    for cell in col:
                        cell.font = Font(name="Arial", size=8)

                worksheet.freeze_panes = worksheet["A2"]
                worksheet.auto_filter.ref = worksheet.dimensions

                for col in worksheet.columns:
                    column = col[0].column_letter
                    if col[0].value == "transcription":
                        worksheet.column_dimensions[column].width = 75
                    else:
                        worksheet.column_dimensions[column].width = 10

                print(f"Completed worksheet for: {dirname}")

            except Exception as e:
                print(f"Failed to process file {filepath}: {e}")

    try:
        workbook.save(outputFilename)
        print(f"Workbook saved to: {outputFilename}")
    except Exception as e:
        print(f"Failed to save workbook: {e}")